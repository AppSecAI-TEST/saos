apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'compass'

dependencies {
    //compile project(':saos-persistence')
    //compile project(':saos-import')
    compile project(path:':saos-batch')
    
    compile lib.'org.apache.tiles:tiles-jsp'
    providedCompile lib.'javax.servlet:javax.servlet-api'
    providedCompile lib.'javax.servlet:jsp-api'
    compile lib.'javax.servlet:jstl'
    compile lib.'org.springframework.security:spring-security-web'
    compile lib.'org.springframework.security:spring-security-config'
    compile lib.'org.springframework.security:spring-security-taglibs'
    compile lib.'joda-time:joda-time-jsptags'
    compile lib.'org.springframework:spring-webmvc'
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'http://dl.bintray.com/robfletcher/gradle-plugins' }
    }
    dependencies {
        classpath 'org.gradle.plugins:gradle-compass:1.0.7'
    }
}

compass {
    sassDir = file('src/main/webapp/WEB-INF/static/stylesheet/scss')
    cssDir = file('src/main/webapp/WEB-INF/static/stylesheet/css/.generated')
}


eclipse.classpath.file {
    // Classpath entry for Eclipse which changes the order of classpathentries; otherwise no sources for 3rd party jars are shown
    withXml { xml ->
        def node = xml.asNode()
        node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
        node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
    }
}

